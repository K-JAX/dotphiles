# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
#ZSH_THEME="robbyrussell"
ZSH_THEME="agnoster"

# oh-my-posh
## (with default theme)
#eval "$(oh-my-posh init zsh)"

## Aliens theme
#eval "$(oh-my-posh init zsh --config $(brew --prefix oh-my-posh)/themes/aliens.omp.json)"

## Atomic Theme
eval "$(oh-my-posh init zsh --config $(brew --prefix oh-my-posh)/themes/atomic.omp.json)"

## Blueish theme
#eval "$(oh-my-posh init zsh --config $(brew --prefix oh-my-posh)/themes/blueish.omp.json)"

## catpuccin
#eval "$(oh-my-posh init zsh --config $(brew --prefix oh-my-posh)/themes/catppuccin.omp.json)" 

## cert theme
#eval "$(oh-my-posh init zsh --config $(brew --prefix oh-my-posh)/themes/cert.omp.json)"

## clean detailed
#eval "$(oh-my-posh init zsh --config $(brew --prefix oh-my-posh)/themes/clean-detailed.omp.json)"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.bashrc
echo 'command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.bashrc
echo 'eval "$(pyenv init -)"' >> ~/.bashrc

alias python2=$(pyenv root)/versions/2.7.18/bin/python

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

echo -e '\033[1;36m.zshrc loaded\033[0m'

source "$HOME/.wp/wp-completion.bash"

# mysql path
export PATH=${PATH}:/usr/local/mysql/bin

# pnpm
export PNPM_HOME="/Users/kevingarubba/Library/pnpm"
export PATH="$PNPM_HOME:$PATH"
# pnpm end

# add rust to path
export PATH="$HOME/.cargo/bin:$PATH"

# coreutils
PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"

# DBngin exports
# export PATH=/Users/Shared/DBngin/mysql/5.7.23/bin:$PATH
export PATH=/Users/Shared/DBngin/mysql/8.0.27/bin:$PATH

# Copy ssh password to clipboard
# alias cpssh="pbcopy < ~/.ssh/.secrets"
alias cpssh="cat ~/.ssh/.psecrets | tr -d '\n\r' | pbcopy"
alias cpmysql="cat ~/.ssh/.mysql-secret | tr -d '\n\r' | pbcopy"
alias cppat="cat ~/.myPAT | tr -d '\n\r' | pbcopy"

# Get the weather
#alias weather="curl https://wttr.in"
weather(){
  if [ -z "$1" ]; then
    curl https://wttr.in
  else
    curl https://wttr.in/$1
  fi
}

alias neovim="nvim"
# neovim session path
export SESH=$HOME/.config/nvim/sessions
alias cdsesh="cd $SESH"
alias cds="cd $SESH"

# Get Digital Ocean domain A record
#getDomainA() {
# 	doctl compute domain records list "$1" | 
#	grep -E '\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\b' | 
#	grep '@' |
#	awk '{print $4}'
#}
# Get Digital Ocean Droplet by Domain's A Record
#getDropletByDomainA() {
#	IP_ADDRESS=$(getDomainA "$1")
#	doctl compute droplet list | grep "$IP_ADDRESS" | awk '{print $2}'
#}

#export PATH="/opt/homebrew/opt/node@18/bin:$PATH"

# nvm
 export NVM_DIR="$HOME/.nvm"
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

# node
export NODE_PATH=$(npm root -g)

# python
export PATH="/opt/homebrew/opt/python@3.10/libexec/bin:$PATH"

# get host of provided domain ie. - getHost [DOMAIN_NAME]
getHost() {
    local IP_ADDRESS=$(dig +short "$1" A | tail -n 1)
    if [ -z "$IP_ADDRESS" ]; then
        echo "No IP address found for $1" 
        return 1
    fi
    local HOST=$(dig +short -x "$IP_ADDRESS" | sed 's/\.$//')
    echo "$HOST"
}

# set $today variable
TODAY=$(date +%Y-%m-%d)

# asana access
export ASANA_TOKEN=2/1203862810312508/1207992360229091:5549a6f9f841f190e9daac17e8d7427a


# Herd injected PHP binary.
#export PATH="/Users/kevingarubba/Library/Application Support/Herd/bin/":$PATH


# Herd injected PHP 8.2 configuration.
#export HERD_PHP_82_INI_SCAN_DIR="/Users/kevingarubba/Library/Application Support/Herd/config/php/82/"


# auto-suggest
source $(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh

# auto-compolete
#source $HOME/zsh-autocomplete/zsh-autocomplete.plugin.zsh


# zsh syntax highlighting
#echo "source $(brew --prefix)/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" >> ${ZDOTDIR:-$HOME}/.zshrc
source /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh


